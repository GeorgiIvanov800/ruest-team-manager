name: Build, Test & Compose
on:
  push:
    branches: ["main"]
    tags:
      - 'v*'
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  backend:
    name: Backend - Maven verify (tests)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: '21'
          cache: maven

      - name: Maven verify (unit tests)
        working-directory: ruest-team-manager-be
        run: mvn -B -DskipTests=false verify

  frontend:
    name: Frontend - install + build (Vue 3)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use Node 20 with npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ruest-team-manager-fe/package-lock.json
      - name: Install deps
        working-directory: ruest-team-manager-fe
        run: npm ci
      - name: Build
        working-directory: ruest-team-manager-fe
        run: npm run build

  compose-build:
    name: Docker Compose - build images
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check Docker & Compose version
        run: |
          docker version
          docker compose version

      - name: Compose build
        run: docker compose --progress plain -f docker-compose.yml build

  release-images:
    name: Build & Push Docker image to GHCR (tags only)
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push app image
        run: |
          OWNER=${GITHUB_REPOSITORY_OWNER,,}
          IMAGE=ghcr.io/$OWNER/ruest-team-manager-app
          TAG_NAME=${GITHUB_REF_NAME}
          docker buildx build \
                      --platform linux/amd64 \
                      --file Dockerfile \
                      --tag $IMAGE:latest \
                      --tag $IMAGE:$TAG_NAME \
                      --push \
                      .