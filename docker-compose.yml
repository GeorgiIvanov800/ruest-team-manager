services:
  postgres:
    container_name: postgres-rtm
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ruest_team_manager
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - rtm-net

  keycloak:
    container_name: keycloak-rtm
    image: quay.io/keycloak/keycloak:26.2.1
    command: ["start-dev", "--import-realm"]
    environment:
      PROXY_ADDRESS_FORWARDING: "true"
      KC_HTTP_RELATIVE_PATH: /auth
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: "9090"
      KC_HOSTNAME_STRICT: "false"
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - "9090:8080"
    volumes:
      - ./keycloak/realm-prod:/opt/keycloak/data/import:Z,ro
    depends_on:
      - postgres
    networks:
      - rtm-net

  app:
    container_name: rtm-app
    image: ghcr.io/<GeorgiIvanov800>/ruest-team-manager-app:${TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ruest_team_manager
      SPRING_DATASOURCE_USERNAME: username
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://host.docker.internal:9090/auth/realms/ruest-team-manager/protocol/openid-connect/certs
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_AUDIENCE: rtm
      SERVER_PORT: 8088
    ports:
      - "8088:8088"
    depends_on:
      - postgres
      - keycloak
    networks:
      - rtm-net

volumes:
  postgres_data:
  keycloak_data:

networks:
  rtm-net:
    driver: bridge
